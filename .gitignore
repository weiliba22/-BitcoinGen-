import os
import hashlib
import binascii

def generate_private_key():
    # Generate a random 32-byte private key
    private_key = os.urandom(32)
    return private_key

def private_key_to_WIF(private_key):
    # Add the Bitcoin mainnet version prefix
    extended_key = b"\x80" + private_key
    # Calculate the checksum
    first_sha256 = hashlib.sha256(extended_key).digest()
    second_sha256 = hashlib.sha256(first_sha256).digest()
    checksum = second_sha256[:4]
    # Add the checksum
    final_key = extended_key + checksum
    # Convert the result to Base58 format
    WIF = binascii.b2a_base58(final_key)
    return WIF

if __name__ == "__main__":
    private_key = generate_private_key()
    WIF = private_key_to_WIF(private_key)
    print("Private Key:", private_key.hex())
    print("WIF Format:", WIF.decode())
